// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "OMA API Support",
            "email": "support@company.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticate VMware appliance for secure OMA communication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate VMA",
                "parameters": [
                    {
                        "description": "VMA authentication credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/ossea/config": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Single endpoint for all OSSEA configuration operations (get, create, update, delete, test)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ossea-config"
                ],
                "summary": "Unified OSSEA configuration management",
                "parameters": [
                    {
                        "description": "OSSEA configuration operation",
                        "name": "operation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.OSSEAConfigOperation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.OSSEAConfigMultiResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/replications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of all replication jobs with their current status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "List replication jobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.ReplicationJob"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Start a new VM replication job with automatic volume creation, mounting, and CBT tracking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Create automated migration job",
                "parameters": [
                    {
                        "description": "Migration job configuration",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateMigrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.MigrationStartResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/replications/changeid": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the change ID from the last successful migration for incremental sync",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Get previous change ID for VM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM path (e.g., /DatabanxDC/vm/PGWINTESTBIOS)",
                        "name": "vm_path",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/replications/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed real-time status of a migration job including volume and CBT information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Get migration job status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Migration job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/workflows.MigrationStatusResult"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update replication job status, progress, or configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Update replication job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Replication job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated job data",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ReplicationJob"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ReplicationJob"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel and delete a replication job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Delete replication job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Replication job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/replications/{job_id}/changeid": {
            "post": {
                "description": "Store the VMware ChangeID after migration completion for future incremental sync",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "replications"
                ],
                "summary": "Store change ID for migration job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Migration job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ChangeID data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.StoreChangeIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vms": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of all VMs discovered from VMware inventory",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "List VMs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.VMInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vms/inventory": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Accept VM inventory payload from VMware appliance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Receive VM inventory",
                "parameters": [
                    {
                        "description": "VM inventory data",
                        "name": "inventory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.VMInventoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vms/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific VM",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventory"
                ],
                "summary": "Get VM by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.VMInfo"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vms/{vm_id}/active-jobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check for active migration or failover jobs for a VM",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vm-validation"
                ],
                "summary": "Get VM active jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidationResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vms/{vm_id}/configuration-check": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Validate VM configuration for failover compatibility",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vm-validation"
                ],
                "summary": "Validate VM configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidationResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vms/{vm_id}/failover-readiness": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check overall VM readiness for failover operations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vm-validation"
                ],
                "summary": "Check VM failover readiness",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidationResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vms/{vm_id}/network-mapping-status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get network mapping status for VM failover",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vm-validation"
                ],
                "summary": "Get VM network mapping status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkMappingResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vms/{vm_id}/sync-status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed synchronization status for VM",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vm-validation"
                ],
                "summary": "Get VM sync status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidationResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/vms/{vm_id}/volume-status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get volume status and readiness for VM failover",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vm-validation"
                ],
                "summary": "Get VM volume status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidationResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/failover/jobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all failover jobs with optional filtering by type, status, or VM ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "failover"
                ],
                "summary": "List failover jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by job type (live/test)",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by job status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by VM ID",
                        "name": "vm_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FailoverJobListResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/failover/live": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initiate a live VM failover operation that permanently moves the VM to OSSEA",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "failover"
                ],
                "summary": "Initiate live VM failover",
                "parameters": [
                    {
                        "description": "Live failover request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LiveFailoverRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/handlers.FailoverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/failover/test": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initiate a test VM failover operation that creates a temporary VM for testing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "failover"
                ],
                "summary": "Initiate test VM failover",
                "parameters": [
                    {
                        "description": "Test failover request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.TestFailoverRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/handlers.FailoverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/failover/test/{job_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "End a test failover operation and clean up test resources",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "failover"
                ],
                "summary": "End test failover",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Test failover job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FailoverResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/failover/{job_id}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current status and progress of a failover job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "failover"
                ],
                "summary": "Get failover job status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Failover job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.JobStatusResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/failover/{vm_id}/readiness": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Validate if a VM is ready for failover operation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "failover"
                ],
                "summary": "Validate VM failover readiness",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Failover type (live/test)",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidationResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/network-mappings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all network mappings (for admin/debugging)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network-mapping"
                ],
                "summary": "List all network mappings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkMappingResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create or update a network mapping for VM failover",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network-mapping"
                ],
                "summary": "Create network mapping",
                "parameters": [
                    {
                        "description": "Network mapping request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkMappingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/network-mappings/{vm_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get network mappings for a specific VM",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network-mapping"
                ],
                "summary": "Get VM network mappings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkMappingResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/network-mappings/{vm_id}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get network mapping status summary for a VM",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network-mapping"
                ],
                "summary": "Get VM network mapping status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkMappingResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/network-mappings/{vm_id}/{source_network_name}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a network mapping for a VM",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "network-mapping"
                ],
                "summary": "Delete network mapping",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vm_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Source network name",
                        "name": "source_network_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkMappingResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check if the OMA API server is running and healthy",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "OMA Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AuthRequest": {
            "type": "object",
            "required": [
                "appliance_id",
                "token",
                "version"
            ],
            "properties": {
                "appliance_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "handlers.AuthResponse": {
            "type": "object",
            "properties": {
                "error_message": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "session_token": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.CreateMigrationRequest": {
            "type": "object",
            "required": [
                "ossea_config_id",
                "source_vm"
            ],
            "properties": {
                "change_id": {
                    "description": "Optional: CBT configuration for incremental migrations",
                    "type": "string"
                },
                "datacenter": {
                    "description": "Auto-detected if not provided",
                    "type": "string"
                },
                "ossea_config_id": {
                    "description": "Required: OSSEA configuration to use",
                    "type": "integer"
                },
                "previous_change_id": {
                    "type": "string"
                },
                "replication_type": {
                    "description": "Optional: Migration configuration (defaults applied)",
                    "type": "string"
                },
                "snapshot_id": {
                    "type": "string"
                },
                "source_vm": {
                    "description": "Required: Source VM information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.VMInfo"
                        }
                    ]
                },
                "target_network": {
                    "type": "string"
                },
                "vcenter_host": {
                    "description": "Auto-detected if not provided",
                    "type": "string"
                }
            }
        },
        "handlers.DiskInfo": {
            "type": "object",
            "properties": {
                "capacity_bytes": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "provisioning_type": {
                    "type": "string"
                },
                "unit_number": {
                    "type": "integer"
                },
                "used_bytes": {
                    "type": "integer"
                },
                "vmdk_path": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "Missing required field"
                },
                "error": {
                    "type": "string",
                    "example": "Invalid request"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-08-06T10:00:00Z"
                }
            }
        },
        "handlers.MigrationStartResult": {
            "type": "object",
            "properties": {
                "created_volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.VolumeInfo"
                    }
                },
                "job_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "mounted_volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.MountInfo"
                    }
                },
                "progress_percent": {
                    "type": "number"
                },
                "source_vm": {
                    "$ref": "#/definitions/models.VMInfo"
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.MountInfo": {
            "type": "object",
            "properties": {
                "device_path": {
                    "type": "string"
                },
                "mount_point": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.NetworkInfo": {
            "type": "object",
            "properties": {
                "adapter_type": {
                    "type": "string"
                },
                "connected": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "mac_address": {
                    "type": "string"
                },
                "network_name": {
                    "type": "string"
                }
            }
        },
        "handlers.OSSEAConfigMultiResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "get"
                },
                "config": {
                    "description": "single config for get, create, update",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handlers.OSSEAConfigResponse"
                        }
                    ]
                },
                "configs": {
                    "description": "multiple configs for get all",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.OSSEAConfigResponse"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "test_result": {
                    "description": "for test action",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handlers.TestConnectionResponse"
                        }
                    ]
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-01-15T10:00:00Z"
                }
            }
        },
        "handlers.OSSEAConfigOperation": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "description": "get, create, update, delete, test",
                    "type": "string",
                    "example": "get"
                },
                "config": {
                    "description": "required for create, update, test",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handlers.OSSEAConfigRequest"
                        }
                    ]
                },
                "id": {
                    "description": "required for get, update, delete",
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "handlers.OSSEAConfigRequest": {
            "type": "object",
            "required": [
                "api_key",
                "api_url",
                "name",
                "oma_vm_id",
                "secret_key",
                "zone"
            ],
            "properties": {
                "api_key": {
                    "type": "string",
                    "example": "your-api-key"
                },
                "api_url": {
                    "type": "string",
                    "example": "http://10.245.241.101:8080/client/api"
                },
                "disk_offering_id": {
                    "type": "string",
                    "example": "c813c642-d946-49e1-9289-c616dd70206a"
                },
                "domain": {
                    "type": "string",
                    "example": "ROOT"
                },
                "name": {
                    "type": "string",
                    "example": "production-ossea"
                },
                "network_id": {
                    "type": "string",
                    "example": "network-456"
                },
                "oma_vm_id": {
                    "type": "string",
                    "example": "8a4400e5-c92a-4bc4-8bff-4b6b0b6a018c"
                },
                "secret_key": {
                    "type": "string",
                    "example": "your-secret-key"
                },
                "service_offering_id": {
                    "type": "string",
                    "example": "offering-789"
                },
                "template_id": {
                    "type": "string",
                    "example": "template-123"
                },
                "zone": {
                    "type": "string",
                    "example": "OSSEA-Zone"
                }
            }
        },
        "handlers.OSSEAConfigResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string",
                    "example": "your-api-key"
                },
                "api_url": {
                    "type": "string",
                    "example": "http://10.245.241.101:8080/client/api"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-01-15T10:00:00Z"
                },
                "disk_offering_id": {
                    "type": "string",
                    "example": "c813c642-d946-49e1-9289-c616dd70206a"
                },
                "domain": {
                    "type": "string",
                    "example": "ROOT"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "production-ossea"
                },
                "network_id": {
                    "type": "string",
                    "example": "network-456"
                },
                "oma_vm_id": {
                    "type": "string",
                    "example": "8a4400e5-c92a-4bc4-8bff-4b6b0b6a018c"
                },
                "service_offering_id": {
                    "type": "string",
                    "example": "offering-789"
                },
                "template_id": {
                    "type": "string",
                    "example": "template-123"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-01-15T10:30:00Z"
                },
                "zone": {
                    "type": "string",
                    "example": "OSSEA-Zone"
                }
            }
        },
        "handlers.ReplicationJob": {
            "type": "object",
            "properties": {
                "bytes_transferred": {
                    "type": "integer"
                },
                "change_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "progress": {
                    "type": "number"
                },
                "replication_type": {
                    "type": "string"
                },
                "source_vm": {
                    "$ref": "#/definitions/models.VMInfo"
                },
                "status": {
                    "type": "string"
                },
                "target_network": {
                    "type": "string"
                },
                "total_bytes": {
                    "type": "integer"
                },
                "transfer_speed_bps": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handlers.StoreChangeIDRequest": {
            "type": "object",
            "required": [
                "change_id"
            ],
            "properties": {
                "change_id": {
                    "description": "VMware ChangeID from migration",
                    "type": "string"
                },
                "disk_id": {
                    "description": "Disk identifier (defaults to \"disk-2000\")",
                    "type": "string"
                },
                "previous_change_id": {
                    "description": "Previous ChangeID for tracking",
                    "type": "string"
                }
            }
        },
        "handlers.TestConnectionResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "Connection successful"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-01-15T10:00:00Z"
                },
                "zone": {
                    "type": "string",
                    "example": "OSSEA-Zone"
                }
            }
        },
        "handlers.VMInfo": {
            "type": "object",
            "properties": {
                "cpus": {
                    "type": "integer"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.DiskInfo"
                    }
                },
                "id": {
                    "type": "string"
                },
                "memory_mb": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.NetworkInfo"
                    }
                },
                "os_type": {
                    "type": "string"
                },
                "power_state": {
                    "type": "string"
                },
                "vmx_version": {
                    "type": "string"
                }
            }
        },
        "handlers.VMInventoryRequest": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string"
                },
                "vcenter": {
                    "type": "object",
                    "properties": {
                        "datacenter": {
                            "type": "string"
                        },
                        "host": {
                            "type": "string"
                        }
                    }
                },
                "vms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.VMInfo"
                    }
                }
            }
        },
        "handlers.VolumeInfo": {
            "type": "object",
            "properties": {
                "size_gb": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "volume_id": {
                    "type": "string"
                },
                "volume_name": {
                    "type": "string"
                }
            }
        },
        "models.DiskInfo": {
            "type": "object",
            "required": [
                "datastore",
                "path",
                "size_gb"
            ],
            "properties": {
                "capacity_bytes": {
                    "type": "integer"
                },
                "datastore": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "provisioning_type": {
                    "type": "string"
                },
                "size_gb": {
                    "type": "integer"
                },
                "unit_number": {
                    "type": "integer"
                },
                "vmdk_path": {
                    "type": "string"
                }
            }
        },
        "models.NetworkInfo": {
            "type": "object",
            "properties": {
                "adapter_type": {
                    "type": "string"
                },
                "connected": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "mac_address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.VMInfo": {
            "type": "object",
            "required": [
                "cpus",
                "datacenter",
                "disks",
                "id",
                "memory_mb",
                "name",
                "path"
            ],
            "properties": {
                "cpus": {
                    "type": "integer"
                },
                "datacenter": {
                    "type": "string"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DiskInfo"
                    }
                },
                "id": {
                    "type": "string"
                },
                "memory_mb": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NetworkInfo"
                    }
                },
                "os_type": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "power_state": {
                    "type": "string"
                },
                "vmx_version": {
                    "type": "string"
                }
            }
        },
        "workflows.CBTStatus": {
            "type": "object",
            "properties": {
                "blocks_changed": {
                    "type": "integer"
                },
                "bytes_transferred": {
                    "type": "integer"
                },
                "change_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "disk_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "sync_duration_seconds": {
                    "type": "integer"
                },
                "sync_success": {
                    "type": "boolean"
                },
                "sync_type": {
                    "type": "string"
                }
            }
        },
        "workflows.DiskStatus": {
            "type": "object",
            "properties": {
                "bytes_synced": {
                    "type": "integer"
                },
                "change_id": {
                    "type": "string"
                },
                "disk_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ossea_volume_id": {
                    "type": "integer"
                },
                "size_gb": {
                    "type": "integer"
                },
                "sync_progress_percent": {
                    "type": "number"
                },
                "sync_status": {
                    "type": "string"
                },
                "vmdk_path": {
                    "type": "string"
                }
            }
        },
        "workflows.MigrationConfigStatus": {
            "type": "object",
            "properties": {
                "ossea_config_id": {
                    "type": "integer"
                },
                "replication_type": {
                    "type": "string"
                },
                "target_network": {
                    "type": "string"
                }
            }
        },
        "workflows.MigrationStatusResult": {
            "type": "object",
            "properties": {
                "cbt_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workflows.CBTStatus"
                    }
                },
                "completed_at": {
                    "type": "string"
                },
                "configuration": {
                    "$ref": "#/definitions/workflows.MigrationConfigStatus"
                },
                "created_at": {
                    "type": "string"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workflows.DiskStatus"
                    }
                },
                "job_id": {
                    "type": "string"
                },
                "mounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/workflows.MountStatus"
                    }
                },
                "progress_percent": {
                    "type": "number"
                },
                "source_vm": {
                    "$ref": "#/definitions/workflows.SourceVMStatus"
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "workflows.MountStatus": {
            "type": "object",
            "properties": {
                "device_path": {
                    "type": "string"
                },
                "filesystem_type": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mount_point": {
                    "type": "string"
                },
                "mount_status": {
                    "type": "string"
                },
                "mounted_at": {
                    "type": "string"
                },
                "ossea_volume_id": {
                    "type": "integer"
                }
            }
        },
        "workflows.SourceVMStatus": {
            "type": "object",
            "properties": {
                "datacenter": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "vcenter_host": {
                    "type": "string"
                }
            }
        },
        "handlers.LiveFailoverRequest": {
            "type": "object",
            "required": [
                "vm_id"
            ],
            "properties": {
                "vm_id": {
                    "type": "string",
                    "example": "vm-123"
                },
                "vm_name": {
                    "type": "string",
                    "example": "PGWINTESTBIOS"
                },
                "skip_validation": {
                    "type": "boolean",
                    "example": false
                },
                "network_mappings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "VM Network": "production-network-id"
                    }
                },
                "custom_config": {
                    "type": "object",
                    "additionalProperties": true
                },
                "notification_config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.TestFailoverRequest": {
            "type": "object",
            "required": [
                "vm_id"
            ],
            "properties": {
                "vm_id": {
                    "type": "string",
                    "example": "vm-123"
                },
                "vm_name": {
                    "type": "string",
                    "example": "PGWINTESTBIOS"
                },
                "skip_validation": {
                    "type": "boolean",
                    "example": false
                },
                "test_duration": {
                    "type": "string",
                    "example": "2h",
                    "description": "Duration string (e.g., '2h', '30m')"
                },
                "auto_cleanup": {
                    "type": "boolean",
                    "example": true
                },
                "network_mappings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "VM Network": "test-network-id"
                    }
                },
                "custom_config": {
                    "type": "object",
                    "additionalProperties": true
                },
                "notification_config": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.FailoverResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Live failover job created successfully"
                },
                "job_id": {
                    "type": "string",
                    "example": "live-failover-vm-123-1645123456"
                },
                "estimated_duration": {
                    "type": "string",
                    "example": "5-15 minutes"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.ValidationResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Validation completed successfully"
                },
                "is_valid": {
                    "type": "boolean",
                    "example": true
                },
                "readiness_score": {
                    "type": "number",
                    "example": 85.0
                },
                "validation_result": {
                    "type": "object",
                    "additionalProperties": true
                },
                "required_actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Configure network mappings",
                        "Verify volume synchronization"
                    ]
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.JobStatusResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Retrieved status for live failover job"
                },
                "job_id": {
                    "type": "string",
                    "example": "live-failover-vm-123-1645123456"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "validating",
                        "snapshotting",
                        "creating_vm",
                        "switching_volume",
                        "powering_on",
                        "completed",
                        "failed",
                        "cleanup",
                        "cleanup_completed"
                    ],
                    "example": "in_progress"
                },
                "progress": {
                    "type": "number",
                    "example": 75.0
                },
                "start_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "duration": {
                    "type": "string",
                    "example": "5m30s"
                },
                "job_details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.FailoverJobListResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Retrieved 5 failover jobs"
                },
                "total": {
                    "type": "integer",
                    "example": 5
                },
                "filters": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "status": {
                            "type": "string"
                        },
                        "vm_id": {
                            "type": "string"
                        }
                    }
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "job_id": {
                                "type": "string"
                            },
                            "vm_id": {
                                "type": "string"
                            },
                            "vm_name": {
                                "type": "string"
                            },
                            "job_type": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            },
                            "progress": {
                                "type": "number"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    }
                }
            }
        },
        "handlers.NetworkMappingRequest": {
            "type": "object",
            "required": [
                "vm_id",
                "source_network_name",
                "destination_network_id"
            ],
            "properties": {
                "vm_id": {
                    "type": "string",
                    "example": "vm-123"
                },
                "source_network_name": {
                    "type": "string",
                    "example": "VM Network"
                },
                "destination_network_id": {
                    "type": "string",
                    "example": "network-456"
                },
                "destination_network_name": {
                    "type": "string",
                    "example": "Production Network"
                },
                "is_test_network": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "handlers.NetworkMappingResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Network mapping created successfully"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8082",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "OMA Migration API",
	Description:      "OMA (OSSEA Migration Appliance) API for VMware to OSSEA migration operations\nFollowing project rules: minimal endpoints, modular design, clean interfaces",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
